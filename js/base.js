(function(){
  "use strict";

  function log(...args){ console.log("[base.js]", ...args); }

  let data = {};            // –æ–±—ä–µ–∫—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  let currentUser = null;   // —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

  // --- –†–∞–±–æ—Ç–∞ —Å localStorage ---
  function loadUsers(){
    const raw = localStorage.getItem("users");
    if (!raw) {
      data = {};
      log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç –≤ localStorage");
      return;
    }
    try {
      data = JSON.parse(raw) || {};
      log("–ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", Object.keys(data));
    } catch (err) {
      console.error("[base.js] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ users:", err);
      try {
        if (confirm("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ localStorage –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã. –°–±—Ä–æ—Å–∏—Ç—å –∏—Ö?")) {
          localStorage.removeItem("users");
          data = {};
        } else {
          data = {};
        }
      } catch(e){ data = {}; }
    }
  }

  function saveUsers(){
    try {
      localStorage.setItem("users", JSON.stringify(data));
      log("–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏");
    } catch (err){
      console.error("[base.js] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å users:", err);
    }
  }

  function saveCurrentUser(){
    try {
      if (currentUser) localStorage.setItem("currentUser", currentUser);
      else localStorage.removeItem("currentUser");
      log("–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", currentUser);
    } catch(err){
      console.error("[base.js] –û—à–∏–±–∫–∞ saveCurrentUser:", err);
    }
  }

  // --- UI helpers ---
  function clearAuthFields(){
    const ids = ["login-username","login-password","register-username","register-password","register-password-confirm"];
    ids.forEach(id=>{
      const el = document.getElementById(id);
      if (el) el.value = "";
    });
    const le = document.getElementById("login-error");
    const re = document.getElementById("register-error");
    if (le) le.innerText = "";
    if (re) re.innerText = "";
  }

  function showAuthScreen(){
    const auth = document.getElementById("auth-container");
    const game = document.getElementById("game-screen");
    if(auth) auth.style.display = "block";
    if(game) game.style.display = "none";
    clearAuthFields();
  }

  function startGame(){
    if (!currentUser || !data[currentUser]) {
      showAuthScreen();
      return;
    }
    const auth = document.getElementById("auth-container");
    const game = document.getElementById("game-screen");
    if(auth) auth.style.display = "none";
    if(game) game.style.display = "flex";
    const playerEl = document.getElementById("player-name");
    if (playerEl) playerEl.innerText = currentUser;
    const g = document.getElementById("grivnas");
    const d = document.getElementById("dollars");
    if (g) g.innerText = data[currentUser].grivnas || 0;
    if (d) d.innerText = data[currentUser].dollars || 0;
    log("–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ –¥–ª—è", currentUser);
  }

  // --- –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ ---
  function clickSuhuren() {
    if (!currentUser) {
      alert("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å");
      return;
    }

    // –¥–æ–±–∞–≤–ª—è–µ–º 1 –≥—Ä–∏–≤–Ω—É –∑–∞ –∫–ª–∏–∫
    data[currentUser].grivnas = (data[currentUser].grivnas || 0) + 1;

    // —Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤
    data[currentUser].clicks = (data[currentUser].clicks || 0) + 1;

    // –∫–∞–∂–¥—ã–µ 50 –∫–ª–∏–∫–æ–≤ 15% —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è 1 –¥–æ–ª–ª–∞—Ä–∞
    if (data[currentUser].clicks % 50 === 0) {
      if (Math.random() < 0.15) { // 15% —à–∞–Ω—Å
        data[currentUser].dollars = (data[currentUser].dollars || 0) + 1;
        alert("üéâ –í—ã–ø–∞–ª –¥–æ–ª–ª–∞—Ä!");
      }
    }

    // –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const g = document.getElementById("grivnas");
    const d = document.getElementById("dollars");
    if (g) g.innerText = data[currentUser].grivnas;
    if (d) d.innerText = data[currentUser].dollars;

    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    saveUsers();
    log("–ö–ª–∏–∫ ‚Äî –æ–±–Ω–æ–≤–ª—ë–Ω –±–∞–ª–∞–Ω—Å:", data[currentUser]);
  }

  // --- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è / —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ---
  function login(){
    const username = (document.getElementById("login-username").value || "").trim();
    const password = document.getElementById("login-password").value || "";
    const err = document.getElementById("login-error");
    if (err) err.innerText = "";
    if (!username || !password) {
      if (err) err.innerText = "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!";
      return;
    }
    if (!data[username]) {
      if (err) err.innerText = "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç!";
      return;
    }
    if (data[username].password !== password) {
      if (err) err.innerText = "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!";
      return;
    }
    currentUser = username;
    saveCurrentUser();
    startGame();
    clearAuthFields();
  }

  function register(){
    const username = (document.getElementById("register-username").value || "").trim();
    const password = document.getElementById("register-password").value || "";
    const confirmP = document.getElementById("register-password-confirm").value || "";
    const err = document.getElementById("register-error");
    if (err) err.innerText = "";
    if (!username || !password || !confirmP) {
      if (err) err.innerText = "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!";
      return;
    }
    if (password.length < 4) {
      if (err) err.innerText = "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 4 —Å–∏–º–≤–æ–ª–∞!";
      return;
    }
    if (password !== confirmP) {
      if (err) err.innerText = "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!";
      return;
    }
    if (data[username]) {
      if (err) err.innerText = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!";
      return;
    }
    data[username] = { password: password, grivnas: 0, dollars: 0, clicks: 0 };
    saveUsers();
    currentUser = username;
    saveCurrentUser();
    startGame();
    clearAuthFields();
  }

  function deleteAccount(){
    if (!currentUser) { alert("–ù–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"); return; }
    if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç?")) return;
    delete data[currentUser];
    saveUsers();
    currentUser = null;
    saveCurrentUser();
    showAuthScreen();
  }

  // --- –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å ---
  window.login = login;
  // –≠–∫—Å–ø–æ—Ä—Ç API –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü (–º–∞–≥–∞–∑–∏–Ω –∏ —Ç.–ø.)
window.gameAPI = {
  getData: () => data,                   // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å—Å—ã–ª–∫–∞)
  getCurrentUser: () => currentUser,    // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ null)
  saveUsers,                             // —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è users –≤ localStorage
  loadUsers,                             // –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  saveCurrentUser                         // —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å currentUser –≤ localStorage
};
  window.register = register;
  window.deleteAccount = deleteAccount;
  window.clickSuhuren = clickSuhuren;

  // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
  document.addEventListener("DOMContentLoaded", ()=>{
    log("DOMContentLoaded ‚Äî –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è");
    loadUsers();
    try {
      const saved = localStorage.getItem("currentUser");
      if (saved && data[saved]) {
        currentUser = saved;
        startGame();
      } else {
        showAuthScreen();
      }
    } catch(e) {
      console.error("[base.js] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ currentUser:", e);
      showAuthScreen();
    }

    // –í–∫–ª–∞–¥–∫–∏
    const loginTab = document.getElementById("login-tab-btn");
    const registerTab = document.getElementById("register-tab-btn");
    if (loginTab && registerTab) {
      loginTab.addEventListener("click", ()=>{
        document.getElementById("login-screen").classList.add("active");
        document.getElementById("register-screen").classList.remove("active");
        loginTab.classList.add("active");
        registerTab.classList.remove("active");
        clearAuthFields();
      });
      registerTab.addEventListener("click", ()=>{
        document.getElementById("register-screen").classList.add("active");
        document.getElementById("login-screen").classList.remove("active");
        registerTab.classList.add("active");
        loginTab.classList.remove("active");
        clearAuthFields();
      });
    }
  });

})();

